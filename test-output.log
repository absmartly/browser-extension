
> absmartly-browser-extension@0.0.1 test:e2e
> playwright test

üöÄ Starting global test setup...
‚úÖ Extension already built
‚ö†Ô∏è  Note: Using existing build. Delete build/chrome-mv3-dev/manifest.json to force rebuild.
‚úÖ Copied seed.html to build directory
‚úÖ Copied local-test-page.html to build directory
‚úÖ Loaded environment variables from .env.local
‚úÖ API credentials found in environment
‚úÖ Global setup completed successfully
---

Running 207 tests using 1 worker

  ‚úì    1 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:396:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should render toast notifications with different types (3.4s)
  ‚úì    2 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:426:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should auto-dismiss notifications after specified timing (2.0s)
  ‚úì    3 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:439:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should not auto-dismiss persistent notifications (5.2s)
  ‚úì    4 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:452:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should handle multiple notifications with queue management (4.0s)
  ‚úì    5 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:467:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should handle rapid notification creation without overwhelming queue (69ms)
  ‚úì    6 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:480:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should dismiss notifications when clicked (2.2s)
  ‚úì    7 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:493:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should dismiss notifications using close button (2.2s)
  ‚úò    8 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:506:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should show animation transitions correctly (2.2s)
  ‚úò    9 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:522:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should position notifications correctly on screen (1.2s)
  ‚úò   10 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:547:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should truncate long messages appropriately (1.2s)
  ‚úì   11 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:564:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should display appropriate icons for different notification types (8.3s)
  ‚úò   12 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:586:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should provide proper ARIA announcements for screen readers (1.2s)
  ‚úì   13 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:608:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should handle notifications without icons when configured (68ms)
  ‚úì   14 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:621:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should maintain proper stacking order with multiple rapid notifications (58ms)
  ‚úì   15 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:637:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should handle edge cases gracefully (2.2s)
  ‚úì   16 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:672:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should cleanup properly when notifications are removed (2.2s)
  ‚úì   17 [chromium] ‚Ä∫ tests/components/notifications.spec.ts:696:7 ‚Ä∫ Notifications Component Tests ‚Ä∫ should handle viewport resizing correctly (1.2s)
Extension ID: elelnihlihbhpkobodjiodoefdjpdcjp
  ‚úò   18 [chromium] ‚Ä∫ tests/e2e/api-integration.spec.ts:8:7 ‚Ä∫ API Integration Tests ‚Ä∫ sidebar boots and makes a real API call via background (1.5m)
Extension ID: elelnihlihbhpkobodjiodoefdjpdcjp
  ‚úò   19 [chromium] ‚Ä∫ tests/e2e/api-integration.spec.ts:88:7 ‚Ä∫ API Integration Tests ‚Ä∫ sidebar shows experiments after API call (1.5m)
Extension ID: elelnihlihbhpkobodjiodoefdjpdcjp
  ‚úò   20 [chromium] ‚Ä∫ tests/e2e/api-integration.spec.ts:121:7 ‚Ä∫ API Integration Tests ‚Ä∫ can navigate to experiment details (1.5m)
Extension ID: elelnihlihbhpkobodjiodoefdjpdcjp
  ‚úò   21 [chromium] ‚Ä∫ tests/e2e/api-integration.spec.ts:160:7 ‚Ä∫ API Integration Tests ‚Ä∫ storage persists across page reloads (1.5m)
[2m[WebServer] [22m(node:59124) [DEP0066] DeprecationWarning: OutgoingMessage.prototype._headers is deprecated
[2m[WebServer] [22m(Use `node --trace-deprecation ...` to show where the warning was created)
[DEBUG] Plugin properties: [
  [32m'name'[39m,
  [32m'version'[39m,
  [32m'initialized'[39m,
  [32m'capabilities'[39m,
  [32m'instance'[39m,
  [32m'timestamp'[39m
]
[DEBUG] Plugin prototype: []
[DEBUG] Has exposureTracker: [33mfalse[39m
[DEBUG] Context properties: [ [32m'__plugins'[39m, [32m'__domPlugin'[39m ]
  ‚úì   22 [chromium] ‚Ä∫ tests/e2e/debug-exposure-props.spec.ts:5:5 ‚Ä∫ Debug: Show all plugin properties (2.8s)
[DEBUG] Exposure Tracker State: {
  "pluginExists": true,
  "trackerExists": false,
  "experimentsMapExists": false,
  "experimentsMapType": "N/A",
  "experimentNames": [],
  "experimentDetails": null
}
[DEBUG] Element text: Test Content

=== Debug Report ===
Plugin exists: [33mtrue[39m
Tracker exists: [33mfalse[39m
Experiments Map exists: [33mfalse[39m
Experiments Map type: N/A
Experiments count: [90mundefined[39m
Experiment names: []
Has debug_test: [90mundefined[39m
Experiment details: null
Changes applied: [33mtrue[39m
  ‚úì   23 [chromium] ‚Ä∫ tests/e2e/debug-exposure.spec.ts:5:5 ‚Ä∫ Debug: Check exposure tracker state (2.2s)
Wrapper exists: [33mtrue[39m
Wrapper keys: [
  [32m'name'[39m,
  [32m'version'[39m,
  [32m'initialized'[39m,
  [32m'capabilities'[39m,
  [32m'instance'[39m,
  [32m'timestamp'[39m
]
Real plugin exists: [33mtrue[39m
Real plugin keys: [
  [32m'mutationObserver'[39m,
  [32m'exposedExperiments'[39m,
  [32m'eventListeners'[39m,
  [32m'styleManagers'[39m,
  [32m'initialized'[39m,
  [32m'watchedElements'[39m,
  [32m'persistenceObserver'[39m,
  [32m'reapplyingElements'[39m,
  [32m'reapplyLogThrottle'[39m,
  [32m'appliedStyleChanges'[39m,
  [32m'antiFlickerTimeout'[39m,
  [32m'antiFlickerStyleId'[39m,
  [32m'config'[39m,
  [32m'domManipulator'[39m,
  [32m'variantExtractor'[39m,
  [32m'exposureTracker'[39m
]
Has exposureTracker: [33mtrue[39m
Tracker type: object
Experiments exists: [33mtrue[39m
Experiments size: [33m1[39m
  ‚úì   24 [chromium] ‚Ä∫ tests/e2e/debug-instance.spec.ts:3:5 ‚Ä∫ Debug: Access plugin.instance (2.1s)
Extension ID: elelnihlihbhpkobodjiodoefdjpdcjp

üìÇ STEP 1: Injecting sidebar
‚úÖ Sidebar injected

üìã STEP 2: Open Create experiment view
  ‚úì Clicked Create New Experiment button
  ‚úì Selected "From Scratch"
  ‚úì Filled experiment name: Code Injection Test 1760044619887
  Selecting Unit Type...
  ‚úì Unit type select is enabled
  ‚úì Clicked unit type trigger
  ‚úì Selected unit type
  Selecting Applications...
  ‚úì Clicked applications trigger
  ‚úì Selected application
‚úÖ Experiment create page opened

üìù STEP 3: Looking for Custom Code Injection section
‚úÖ Found Custom Code Injection section

üîΩ STEP 4: Expanding Custom Code Injection section
‚úÖ Found Custom Code Injection button
‚úÖ Clicked Code Injection button/header
‚úÖ Found Start of <head> section

üëÜ STEP 5: Clicking Start of <head> section
[BROWSER log] [CustomCodeEditor] Effect running - isOpen: true section: headStart value: 
[BROWSER log] [CustomCodeEditor] Sending OPEN_CODE_EDITOR to parent window
[BROWSER log] [CustomCodeEditor] Message sent
‚úÖ Clicked Start of <head>

‚ú® STEP 6: Waiting for editor modal to appear
[BROWSER log] [Content Script] Received message from sidebar iframe: OPEN_CODE_EDITOR {source: absmartly-sidebar, type: OPEN_CODE_EDITOR, data: Object}
[BROWSER log] [Content Script] Opening code editor with data: {section: headStart, value: , sectionTitle: Start of <head> tag, placeholder: <!-- Add your HTML/JavaScript code here -->
<script>
  // Your code
</script>, readOnly: false}
[BROWSER log] [openCodeEditor] Function called with: {section: headStart, valueLength: 0, timestamp: 1760044624890}
[BROWSER log] [openCodeEditor] After closeCodeEditor, now creating new container
[BROWSER log] [Content Script] Sending confirmation back to sidebar
üì∏ Screenshot saved before modal check
‚úÖ Code editor modal appeared!
‚úÖ CodeMirror editor found
‚úÖ CodeMirror content area found

‚å®Ô∏è  STEP 7: Typing HTML into CodeMirror
‚úÖ Typed HTML code
üì∏ Screenshot saved with code

üíæ STEP 8: Saving code in modal
‚úÖ Clicked Save button
[BROWSER log] [CustomCodeEditor] Effect running - isOpen: true section: headStart value: <script>
    console.log("Test injection");
</scri
[BROWSER log] [CustomCodeEditor] Sending OPEN_CODE_EDITOR to parent window
[BROWSER log] [CustomCodeEditor] Message sent
[BROWSER log] [Content Script] Received message from sidebar iframe: CLOSE_CODE_EDITOR {source: absmartly-sidebar, type: CLOSE_CODE_EDITOR}
[BROWSER log] [Content Script] Received message from sidebar iframe: OPEN_CODE_EDITOR {source: absmartly-sidebar, type: OPEN_CODE_EDITOR, data: Object}
[BROWSER log] [Content Script] Opening code editor with data: {section: headStart, value: <script>
    console.log("Test injection");
</script>
</script>, sectionTitle: Start of <head> tag, placeholder: <!-- Add your HTML/JavaScript code here -->
<script>
  // Your code
</script>, readOnly: false}
[BROWSER log] [openCodeEditor] Function called with: {section: headStart, valueLength: 63, timestamp: 1760044629851}
[BROWSER log] [openCodeEditor] After closeCodeEditor, now creating new container
[BROWSER log] [Content Script] Sending confirmation back to sidebar
[BROWSER log] [Content Script] Received message from sidebar iframe: CLOSE_CODE_EDITOR {source: absmartly-sidebar, type: CLOSE_CODE_EDITOR}
‚úÖ Modal closed
‚úÖ Code saved to component state

üîÑ STEP 9: Re-opening editor to verify code persists
[BROWSER log] [CustomCodeEditor] Effect running - isOpen: true section: headStart value: <script>
    console.log("Test injection");
</scri
[BROWSER log] [CustomCodeEditor] Sending OPEN_CODE_EDITOR to parent window
[BROWSER log] [CustomCodeEditor] Message sent
[BROWSER log] [Content Script] Received message from sidebar iframe: OPEN_CODE_EDITOR {source: absmartly-sidebar, type: OPEN_CODE_EDITOR, data: Object}
[BROWSER log] [Content Script] Opening code editor with data: {section: headStart, value: <script>
    console.log("Test injection");
</script>
</script>, sectionTitle: Start of <head> tag, placeholder: <!-- Add your HTML/JavaScript code here -->
<script>
  // Your code
</script>, readOnly: false}
[BROWSER log] [openCodeEditor] Function called with: {section: headStart, valueLength: 63, timestamp: 1760044630875}
[BROWSER log] [openCodeEditor] After closeCodeEditor, now creating new container
‚úÖ Re-opened Start of <head>
[BROWSER log] [Content Script] Sending confirmation back to sidebar
üì∏ Screenshot saved before checking for modal
‚úÖ Editor modal re-appeared
‚úÖ Code persisted in UI state: <script>    console.log("Test injection");</script
üì∏ Screenshot of reopened editor
‚úÖ Code persistence verified!
[BROWSER log] [Content Script] Received message from sidebar iframe: CLOSE_CODE_EDITOR {source: absmartly-sidebar, type: CLOSE_CODE_EDITOR}
  ‚úì   25 [chromium] ‚Ä∫ tests/e2e/experiment-code-injection.spec.ts:44:7 ‚Ä∫ Experiment Code Injection UI ‚Ä∫ code injection UI exists and code editor can be opened (12.7s)
‚úÖ Test page loaded
Extension ID: elelnihlihbhpkobodjiodoefdjpdcjp

üìÇ Injecting sidebar
‚úÖ Sidebar visible

üîç Verifying Header component in experiment list
  üìã Sidebar body text: 
    BETAExperimentsNo experiments foundSelect an option20 per page50 per page100 per pagePage 1Page 1
    
  


  ‚úì Header with "Experiments" title visible
  ‚úì Logo visible in header

üìã Opening create experiment form
  ‚úì Clicked Create New Experiment button
  ‚úì Selected "From Scratch" option

üîç Verifying Header component in create form
  ‚úì Header shows "Create New Experiment" title
  ‚úì Back button visible in header
  ‚úì Logo visible in header

üìù Filling experiment form
  ‚úì Filled experiment name: E2E Test Experiment 1760044632386
  ‚úì Name sync lock icon present
  Selecting Unit Type...
  ‚úì Selected unit type
  Selecting Applications...
  ‚úì Selected application

üîç Verifying create button text
  ‚úì Button shows "Create Experiment Draft" (not "Update Experiment")

üîó Testing name sync functionality
  ‚úì Display name synced: "Test Sync Name"
  ‚úì Display name unchanged after unlock: "Test Sync Name"

üìä Verifying variants section
  ‚úì Found 2 Visual Editor buttons (using useExperimentVariants hook)

üîÑ Testing detail view dropdowns with existing experiment
  ‚úì Clicked back button
  ‚úì Opened existing experiment
  ‚úì Unit Type dropdown loaded
  ‚úì Owners dropdown loaded
  ‚úì Tags dropdown loaded

üè∑Ô∏è  Verifying state labels in experiment list
  ‚úì State labels display correctly in list view

üìñ Opening first experiment
  ‚úì Clicked first experiment

‚è≥ Verifying dropdowns loaded in detail view
  ‚úì Unit Type dropdown loaded
  ‚úì Owners dropdown loaded
  ‚úì Tags dropdown loaded

üîç Verifying Header component in detail view
  ‚úì Logo visible in header
  ‚úì Back button visible in header
  ‚úì Edit name button visible

üé¨ Verifying ExperimentActions component
  ‚ÑπÔ∏è  No ExperimentActions buttons visible (may depend on permissions)

üè∑Ô∏è  Verifying state label displays correctly
  Badge text: "BETA"
  ‚úì Badge shows display label (not raw state value)
  ‚ÑπÔ∏è  Badge shows: "BETA"

‚è≥ Verifying dropdowns loaded properly
  ‚úì Unit Type dropdown loaded
  ‚úì Owners dropdown loaded
  ‚úì Tags dropdown loaded

üíæ Verifying Save Changes button
  ‚úì Save Changes button visible
  Experiment status: BETA
  ‚ÑπÔ∏è  Save button enabled for status: BETA

üìä Verifying variants with useExperimentVariants hook
  ‚ÑπÔ∏è  No variants section visible (may be empty)

‚óÄÔ∏è  Testing back navigation
  ‚úì Clicked back button
  ‚úì Returned to experiment list

üìã Testing template selection
  ‚úì Clicked "From Scratch" option

üîç Verifying create form header
  ‚úì Header correctly shows "Create New Experiment" (not "Edit Experiment")

üîç Verifying button text
  ‚úì Button correctly shows "Create Experiment Draft" (not "Update Experiment")

‚óÄÔ∏è  Navigating back to experiments list
  ‚úì Clicked back button
  ‚úì Returned to experiment list

‚öôÔ∏è  Testing Settings view
  ‚úì Clicked settings button
  ‚úì Header shows "Settings" title
  ‚úì Logo visible in header
  ‚úì Back button visible in header

‚óÄÔ∏è  Testing back from Settings
  ‚úì Clicked back button
  ‚úì Settings view closed

‚úÖ Comprehensive experiment flow test PASSED!
  ‚úì   26 [chromium] ‚Ä∫ tests/e2e/experiment-flows.spec.ts:43:7 ‚Ä∫ Experiment Creation and Editing Flows ‚Ä∫ Create new experiment from scratch with Header component (12.8s)

üöÄ Starting Move Operation Test
Extension ID: elelnihlihbhpkobodjiodoefdjpdcjp
‚öôÔ∏è Setting API credentials...
üìÑ Creating test page...
üíâ Injecting sidebar...
üî¨ Creating experiment with move change...
  ‚úò   27 [chromium] ‚Ä∫ tests/e2e/move-operation-original-position.spec.ts:6:7 ‚Ä∫ Move Operation Original Position Preservation ‚Ä∫ should preserve original position when changing selector after move (4.7s)

üöÄ Starting Target Selector Change Test
üìù Creating move change with Target A...
üéØ Changing target from A to B...
‚Ü©Ô∏è Testing restoration to original position...
‚úÖ Original position preserved when changing target selector!
  ‚úì   28 [chromium] ‚Ä∫ tests/e2e/move-operation-original-position.spec.ts:268:7 ‚Ä∫ Move Operation Original Position Preservation ‚Ä∫ should preserve original position when changing target selector (3.9s)
[CONSOLE] log: [ABsmartly] Content script executing - TOP OF FILE
[CONSOLE] log: [ABsmartly] Content script marker set: true
[CONSOLE] error: Failed to load resource: the server responded with a status of 401 ()
[CONSOLE] error: ir
[CONSOLE] error: Failed to load resource: the server responded with a status of 401 ()
[CONSOLE] error: ir
[CONSOLE] log: üîµ INFO   | [plasmo/parcel-runtime]: Connected to HMR server for /Users/joalves/git_tree/absmartly-browser-extension/content.ts
‚úÖ Test page loaded (test mode enabled)
Extension ID: elelnihlihbhpkobodjiodoefdjpdcjp

üìÇ STEP 1: Injecting sidebar
[CONSOLE] log: üîµ ABSmartly Extension: Sidebar script loaded
[CONSOLE] log: [tabs/sidebar.tsx] Running in iframe, setting up message forwarding
[CONSOLE] log: [tabs/sidebar.tsx] Message forwarding listener registered
[CONSOLE] log: [tabs/sidebar.tsx] Incoming message listener registered
[CONSOLE] log: üîµ INFO   | [plasmo/parcel-runtime]: Connected to HMR server for /Users/joalves/git_tree/absmartly-browser-extension/.plasmo/tabs/sidebar.tsx
‚úÖ Sidebar visible

‚öôÔ∏è STEP 2: Navigating to Settings
[CONSOLE] log: [SettingsView] Permissions: {hasCookies: true, hasHost: true}
[CONSOLE] log: [SettingsView] Permissions: {hasCookies: true, hasHost: true}
[CONSOLE] log: [SettingsView] checkAuthStatus called with endpoint: https://demo-2.absmartly.com/v1
[CONSOLE] log: [SettingsView] Permissions: {hasCookies: true, hasHost: true}
[CONSOLE] log: [SettingsView] Permissions: {hasCookies: true, hasHost: true}
[CONSOLE] log: [SettingsView] All permissions already granted
[CONSOLE] log: [SettingsView] Sending CHECK_AUTH message to background, requestId: auth_1760044655914
[CONSOLE] log: [tabs/sidebar.tsx] Received message from background: CHECK_AUTH_RESULT
[CONSOLE] log: [SettingsView] Received CHECK_AUTH response: {success: true, data: Object}
[CONSOLE] log: [SettingsView] Auth check successful, user: {id: 3, email: jonas@absmartly.com, first_name: Jonas, last_name: Alves, avatar: Object}
[CONSOLE] log: [SettingsView] checkAuthStatus finally block - setting checkingAuth to false
‚úÖ Settings page loaded

üîë STEP 3: Configuring API Key authentication
  ‚úì Selected API Key authentication method
  ‚úì Filled endpoint
  ‚úì Filled API key
  üîÑ Testing authentication before saving...
  Current state - endpoint: https://demo-2.absmartly.com/v1 authMethod: apikey hasApiKey: [33mtrue[39m
  ‚úì Found Refresh button, about to click...
[CONSOLE] log:   [EVALUATE] About to click Refresh button
[CONSOLE] log: [SettingsView] checkAuthStatus called with endpoint: https://demo-2.absmartly.com/v1
[CONSOLE] log:   [EVALUATE] Click event dispatched
  ‚úì Clicked Refresh button, waiting for response...
[CONSOLE] log: [SettingsView] Permissions: {hasCookies: true, hasHost: true}
[CONSOLE] log: [SettingsView] All permissions already granted
[CONSOLE] log: [SettingsView] Sending CHECK_AUTH message to background, requestId: auth_1760044656331
  üì∏ Debug screenshot saved after refresh
  Debug: auth-user-info visible? [33mfalse[39m
  Debug: auth-not-authenticated visible? [33mfalse[39m
  ‚úò   29 [chromium] ‚Ä∫ tests/e2e/settings-auth.spec.ts:44:7 ‚Ä∫ Settings Authentication Tests ‚Ä∫ should show authenticated user data with API Key authentication (3.4s)
[CONSOLE] log: [ABsmartly] Content script executing - TOP OF FILE
[CONSOLE] log: [ABsmartly] Content script marker set: true
[CONSOLE] error: Failed to load resource: the server responded with a status of 401 ()
[CONSOLE] error: ir
[CONSOLE] log: üîµ INFO   | [plasmo/parcel-runtime]: Connected to HMR server for /Users/joalves/git_tree/absmartly-browser-extension/content.ts
[CONSOLE] error: Failed to load resource: the server responded with a status of 401 ()
[CONSOLE] error: ir
‚úÖ Test page loaded (test mode enabled)
Extension ID: elelnihlihbhpkobodjiodoefdjpdcjp

üìÇ STEP 1: Injecting sidebar
[CONSOLE] log: üîµ ABSmartly Extension: Sidebar script loaded
[CONSOLE] log: [tabs/sidebar.tsx] Running in iframe, setting up message forwarding
[CONSOLE] log: [tabs/sidebar.tsx] Message forwarding listener registered
[CONSOLE] log: [tabs/sidebar.tsx] Incoming message listener registered
[CONSOLE] log: üîµ INFO   | [plasmo/parcel-runtime]: Connected to HMR server for /Users/joalves/git_tree/absmartly-browser-extension/.plasmo/tabs/sidebar.tsx
‚úÖ Sidebar visible

‚öôÔ∏è STEP 2: Navigating to Settings
[CONSOLE] log: [SettingsView] Permissions: {hasCookies: true, hasHost: true}
[CONSOLE] log: [SettingsView] Permissions: {hasCookies: true, hasHost: true}
[CONSOLE] log: [SettingsView] checkAuthStatus called with endpoint: https://demo-2.absmartly.com/v1
[CONSOLE] log: [SettingsView] Permissions: {hasCookies: true, hasHost: true}
[CONSOLE] log: [SettingsView] Permissions: {hasCookies: true, hasHost: true}
[CONSOLE] log: [SettingsView] All permissions already granted
[CONSOLE] log: [SettingsView] Sending CHECK_AUTH message to background, requestId: auth_1760044658790
[CONSOLE] log: [tabs/sidebar.tsx] Received message from background: CHECK_AUTH_RESULT
[CONSOLE] log: [SettingsView] Received CHECK_AUTH response: {success: true, data: Object}
[CONSOLE] log: [SettingsView] Auth check successful, user: {id: 3, email: jonas@absmartly.com, first_name: Jonas, last_name: Alves, avatar: Object}
[CONSOLE] log: [SettingsView] checkAuthStatus finally block - setting checkingAuth to false
‚úÖ Settings page loaded

üîê STEP 3: Configuring JWT authentication
  ‚úì Selected JWT authentication method
  ‚úì Filled endpoint
  ‚úì Cleared API key (not needed for JWT)

üîì STEP 4: Authenticating with Google OAuth
  ‚úì User already authenticated (JWT cookie present)

üíæ STEP 5: Saving settings and verifying authentication
  ‚úì Clicked Save Settings
  ‚úì Authentication Status section visible
  ‚ö†Ô∏è  User not authenticated - JWT cookie may not be present
  This is expected if running test without prior authentication

üîÑ STEP 6: Testing auth method switching
  ‚úì Switched to API Key method
  ‚úì Filled API key
  ‚úì Switched back to JWT method
  üì∏ Screenshot saved: settings-auth-switching.png
  ‚úì   30 [chromium] ‚Ä∫ tests/e2e/settings-auth.spec.ts:223:7 ‚Ä∫ Settings Authentication Tests ‚Ä∫ should authenticate with JWT and Google OAuth (2.5s)
Initial state: {
  elementText: [32m'Test Change'[39m,
  pluginExists: [33mtrue[39m,
  hasExposureTracker: [33mtrue[39m,
  experimentRegistered: [33mtrue[39m
}
‚úì Plugin initialized and changes applied
‚úì Test setup complete

üìã Testing URL Filter Configuration:
Pattern: /products/*
Mode: simple
Match Type: path
‚úì URL filter config structure is correct

üìÑ JSON Editor Payload:
{
  "changes": [
    {
      "selector": "#test-element",
      "type": "text",
      "value": "Filtered Test Change"
    }
  ],
  "urlFilter": {
    "include": [
      "/products/*"
    ],
    "mode": "simple",
    "matchType": "path"
  }
}
‚úì JSON payload contains all required URL filter fields
‚úì JSON payload is valid and parseable
‚úì Plugin can accept config with URL filter

‚úÖ URL Filter UI and JSON Verification Test PASSED!
Summary:
  ‚Ä¢ URL filter config structure validated
  ‚Ä¢ JSON payload generated correctly
  ‚Ä¢ JSON payload contains all required fields:
    - urlFilter object
    - include array with pattern
    - mode (simple/regex)
    - matchType (path/query/hash/domain/full-url)
  ‚Ä¢ JSON payload is parseable
  ‚Ä¢ Plugin accepts config with URL filter
  ‚úì   31 [chromium] ‚Ä∫ tests/e2e/url-filter-ui.spec.ts:13:5 ‚Ä∫ URL filter UI and JSON verification (2.2s)
Basic test element text: 
      Original test content
    
  ‚úò   32 [chromium] ‚Ä∫ tests/e2e/url-filtering-debug.spec.ts:6:7 ‚Ä∫ URL Filtering Debug Tests ‚Ä∫ Debug: Basic plugin functionality without URL filter (2.2s)
[BROWSER log] [TEST] Setting URL to /products/123
[BROWSER log] [TEST] Current URL: http://localhost:3456/products/123
[BROWSER log] [TEST] Pathname: /products/123
[BROWSER log] [TEST] Hash: 
[BROWSER log] [TEST] Injecting SDK mock
[TEST] Loading plugin from public/absmartly-dom-changes-core.min.js
[BROWSER log] [TEST] Creating context
[BROWSER log] [SDK MOCK] Context constructor called
[BROWSER log] [TEST] Getting DOMChangesPlugin constructor
[BROWSER log] [TEST] DOMChangesPlugin constructor: function
[BROWSER log] [TEST] Creating plugin instance
[BROWSER log] [TEST] Plugin instance created: true
[BROWSER log] [TEST] Initializing plugin...
[BROWSER log] [SDK MOCK] ready() called
[BROWSER log] [SDK MOCK] data() called
[BROWSER log] [TEST] Plugin initialized successfully
[BROWSER log] [TEST] Plugin registered at context.__domPlugin: true
[BROWSER log] [TEST] ===== Testing URLMatcher Directly =====
[BROWSER log] [TEST] URLMatcher exists: false
[TEST] Final element text: 
      Original test content
    
[TEST] Plugin state: {
  "contextExists": true,
  "pluginExists": true,
  "pluginInitialized": true,
  "currentURL": "http://localhost:3456/products/123",
  "pathname": "/products/123",
  "hash": ""
}
  ‚úò   33 [chromium] ‚Ä∫ tests/e2e/url-filtering-debug.spec.ts:83:7 ‚Ä∫ URL Filtering Debug Tests ‚Ä∫ Debug: Plugin with URL filter - comprehensive logging (3.2s)
[BROWSER log] [TEST] Creating SDK mock
[BROWSER log] [TEST] SDK mock created, absmartly.Context exists: function
[TEST] Loading plugin
[BROWSER log] [TEST] ABsmartlyDOM exists: true
[BROWSER log] [TEST] DOMChangesPlugin exists: true
[TEST] Plugin loaded: [33mtrue[39m
[BROWSER log] [TEST] Creating context instance
[BROWSER log] [SDK MOCK] Context constructor
[BROWSER log] [TEST] Context created
[BROWSER log] [TEST] Getting plugin constructor
[BROWSER log] [TEST] Creating plugin with config: {
  "autoApply": true,
  "spa": true,
  "dataSource": "customField",
  "dataFieldName": "__dom_changes",
  "debug": true
}
[BROWSER log] [TEST] Plugin instance created, calling initialize()
[BROWSER log] [SDK MOCK] ready() returning resolved promise
[BROWSER log] [SDK MOCK] data() returning: {
  "experiments": [
    {
      "name": "test_exp",
      "variants": [
        {
          "config": "{\"changes\":[]}"
        },
        {
          "config": "{\"changes\":[{\"selector\":\"#test-element\",\"type\":\"text\",\"value\":\"Changed Text\"}]}"
        }
      ]
    }
  ]
}
[TEST] Final element text: 
      Original test content
    
  ‚úò   34 [chromium] ‚Ä∫ tests/e2e/url-filtering-minimal.spec.ts:5:5 ‚Ä∫ Minimal test: Check SDK mock is working (3.5s)
[TEST] Element text: Changed Text!
  ‚úì   35 [chromium] ‚Ä∫ tests/e2e/url-filtering-working.spec.ts:6:7 ‚Ä∫ URL Filtering Tests - Fixed ‚Ä∫ Basic plugin functionality - using dataSource: variable (2.1s)
[BROWSER log] [TEST] URL set to: http://localhost:3456/products/123
[TEST] Element text on /products/123: Products Page Content
  ‚úì   36 [chromium] ‚Ä∫ tests/e2e/url-filtering-working.spec.ts:81:7 ‚Ä∫ URL Filtering Tests - Fixed ‚Ä∫ URL filtering with path match (2.1s)
[BROWSER log] [TEST] URL set to: http://localhost:3456/about
[TEST] Element text on /about (should be unchanged): 
      Original test content
    
  ‚úì   37 [chromium] ‚Ä∫ tests/e2e/url-filtering-working.spec.ts:169:7 ‚Ä∫ URL Filtering Tests - Fixed ‚Ä∫ URL filtering - no match when URL doesnt match (2.2s)

üìÑ Loading test page with SDK
[log] [ABsmartly] Content script executing - TOP OF FILE
[log] [ABsmartly] Content script marker set: true
  ‚úì SDK mock injected

üîå Loading DOM changes plugin
  ‚úì Plugin loaded and initialized

üîó Navigating to /products/123
  ‚úò   38 [chromium] ‚Ä∫ tests/e2e/url-filtering.spec.ts:41:7 ‚Ä∫ URL Filtering with DOM Changes ‚Ä∫ URL filtering on single variant - user assigned to filtered variant (3.1s)

üìÑ Loading test page with SDK
[log] [ABsmartly] Content script executing - TOP OF FILE
[log] [ABsmartly] Content script marker set: true
  ‚úì SDK mock injected with multi-variant URL filters

üîå Loading DOM changes plugin
  ‚úì Plugin loaded and initialized

üîó Testing variant 1 on /products/123
  ‚úò   39 [chromium] ‚Ä∫ tests/e2e/url-filtering.spec.ts:221:7 ‚Ä∫ URL Filtering with DOM Changes ‚Ä∫ Different URL filters on different variants - all variants tracked (2.7s)

üîó Testing path matching
[log] [ABsmartly] Content script executing - TOP OF FILE
[log] [ABsmartly] Content script marker set: true
  ‚úò   40 [chromium] ‚Ä∫ tests/e2e/url-filtering.spec.ts:475:7 ‚Ä∫ URL Filtering with DOM Changes ‚Ä∫ URL filtering with matchType options (1.6s)
Extension ID: elelnihlihbhpkobodjiodoefdjpdcjp

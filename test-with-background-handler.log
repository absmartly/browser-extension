🚀 Starting global test setup...
✅ Extension already built
⚠️  Note: Using existing build. Delete build/chrome-mv3-dev/manifest.json to force rebuild.
✅ Copied seed.html to build directory
✅ Copied seed.js to build directory
✅ Copied local-test-page.html to build directory
✅ Loaded environment variables from .env.dev.local
✅ API credentials found in environment
✅ Global setup completed successfully
---

Running 1 test using 1 worker

[2m[WebServer] [22m(node:10229) [DEP0066] DeprecationWarning: OutgoingMessage.prototype._headers is deprecated
[2m[WebServer] [22m(Use `node --trace-deprecation ...` to show where the warning was created)
✅ Test page loaded (test mode enabled)
  📋 Console messages so far: 29
Extension ID: hmdfdmlfegajkklhbiijdpkdbaccnplj

📂 STEP 1: Injecting sidebar
✅ Sidebar visible

📋 STEP 2: Creating new experiment
  Dispatched click event to Create New Experiment button
  Selecting "From Scratch" option...
  ✓ Selected "From Scratch" option
  Filled experiment name: E2E Test Experiment 1761076300627
  Selecting Unit Type...
  Selecting Unit Type...
  ✓ Unit type select is enabled
  ✓ Clicked unit type trigger
  ✓ Selected unit type
  Selecting Applications...
  ✓ Clicked applications trigger
  ✓ Selected application
✅ Experiment form filled with required fields
🎨 STEP 3: Clicking Visual Editor button
  ✓ Visual Editor button is enabled (form validation complete)
  ✓ Waited for React handlers to attach
  ✓ Brought test page to front
  ✓ Dispatched click event to Visual Editor button
  ⏳ Waited 3s after VE button click
  📋 Captured 239 console messages
  📋 Content script/background messages: 6
  Messages:
    [log] [ABsmartly] Content script executing - TOP OF FILE
    [log] [ABsmartly] Content script marker set: true
    [log] [ABsmartly] SDK Bridge loaded successfully - version 1.1.0
    [log] [ABsmartly] Message listener called! Message type: ABSMARTLY_PREVIEW
    [log] [ABsmartly] Message listener called! Message type: CHECK_VISUAL_EDITOR_ACTIVE
    [log] [ABsmartly] Message listener called! Message type: SET_VISUAL_EDITOR_STARTING
  ❌ Found 2 error messages:
    - Failed to load resource: the server responded with a status of 404 (Not Found)
    - Failed to save development environment: Error: Cannot access contents of url "http://localhost:3456/visual-editor-test.html?use_shadow_dom_for_visual_editor_context_menu=0". Extension manifest must request permission to access this host.
  ⏳ Waiting for VE banner to appear...
  📋 Total messages captured so far: 239
✅ Visual editor active
  Screenshot saved: sidebar-after-ve-launch.png

🚫 STEP 3.5: Testing VE protection - all buttons should be disabled
  Found 1 Visual Editor buttons
  Button 0 disabled: true, title: "Visual Editor is already active for this variant"
  ✅ All VE buttons correctly disabled when VE is active

🧪 STEP 4: Testing visual editor context menu actions
  Testing: Edit Text on #test-paragraph
  ✓ Edit Text works
  Testing: Hide on #button-1
  ✓ Hide works
  Testing: Delete on #button-2
  ✓ Delete works
  Testing: Edit HTML on #test-container
  ✓ CodeMirror editor appeared
  ✓ CodeMirror syntax highlighting: true
  ✓ Updated HTML via CodeMirror
  Looking for Save button...
  Clicking Save button with JavaScript click...
  Clicked Save button
  Editor closed
  ✓ Edit HTML with CodeMirror works
  Testing: Change image source on img element
  ✓ Added test image to page
  ✓ Context menu opened for image
  ✓ "Change image source" option is visible
  ✓ Clicked "Change image source"
  ✓ Image source dialog opened
  ✓ Context menu closed after opening image dialog
  ✓ Entered new image URL: https://via.placeholder.com/200
  ✓ Clicked Apply button
  ✓ Image source dialog closed after clicking Apply
  ✅ Context menu did NOT reopen (bug is fixed!)
  ✓ Image source updated to: https://via.placeholder.com/200
✅ Visual editor actions tested (Edit Text, Hide, Delete, Edit HTML, Change Image Source)

✓ Verifying DOM changes were actually applied...
  Applied changes: {
  paragraphText: [32m'Modified text!'[39m,
  button1Display: [32m'none'[39m,
  button2Display: [32m'none'[39m,
  testContainerHTML: [32m'<h2>HTML Edited!</h2><p>New paragraph content</p><p></p>'[39m
}
  ✓ Text change applied: paragraph text is "Modified text!"
  ✓ Hide change applied: button-1 is display:none
  ✓ Delete change applied: button-2 is hidden (display:none)
  ✓ HTML change applied: test-container has new HTML
✅ All DOM changes verified and applied correctly

🔄 Testing undo/redo with multiple changes to same element...
  📝 Current text: "Modified text!"
  ✏️  Making change 1: "Undo test 1"
  ✓ Change 1 applied: "Undo test 1" (trackChange: null, undoAction: null)
  ✏️  Making change 2: "Undo test 2"
  ✓ Change 2 applied: "Undo test 2" (trackChange: null, undoAction: null)
  ✏️  Making change 3: "Undo test 3"
  ✓ Change 3 applied: "Undo test 3" (trackChange: null, undoAction: null)
  ✓ Final text after changes: "Undo test 3"

  ⏪ Testing undo with individual change tracking...
  ✓ Undo 1: Text is now "Undo test 2"
  ✓ Undo 2: Text is now "Undo test 1"
  ✓ Undo 3: Text is now "Modified text!"

  ⏩ Testing redo...
  ✓ Redo 1: Text is now "Undo test 1"
  ✓ Redo 2: Text is now "Undo test 2"
  ✓ Redo 3: Text is now "Undo test 3"

✅ Undo/redo with individual change tracking working correctly!
  • Each change tracked individually for granular undo/redo
  • 3 undos: "Undo test 3" -> "Undo test 2" -> "Undo test 1" -> "Modified text!"
  • 3 redos: "Modified text!" -> "Undo test 1" -> "Undo test 2" -> "Undo test 3"

🔘 Testing undo/redo button states...
  ⏪ Undoing all changes to test undo button disabled state...
  ✓ Undo button became disabled after 8 undos
  ✓ Undo button is disabled when no more changes to undo

  ⏩ Redoing all changes to test redo button disabled state...
  ✓ Redo button became disabled after 8 redos
  ✓ Redo button is disabled when no more changes to redo

✅ Undo/redo button states test PASSED!
  • Undo button disabled after 8 undos (no more history)
  • Redo button disabled after 8 redos (caught up to current state)

💾 STEP 5: Clicking Save button...
✅ Save button clicked

⏳ STEP 6: Waiting for sidebar to update after visual editor closes...

📝 STEP 7: Verifying changes in sidebar...
  Screenshot saved to test-results/sidebar-after-save.png
  Inline editor exists: false
  Sidebar HTML length: 41468 characters
  Sidebar HTML: 
    <div id="__plasmo" style="width: 100%; height: 100%; background-color: white; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(17, 24, 39); overflow: auto;"><div class="w-full h-screen bg-white flex flex-col"><div class="p-4"><div class="mb-4 flex items-center justify-between gap-2"><div class="flex items-center gap-3 flex-1 min...
  Elements with 'change' or 'card' in class: 5
Found 5 DOM change cards in sidebar
DOM Change cards content: Text#test-paragraphSet text to: "Undo test 3" Style#button-1display:none Remove#button-2Remove element HTML#test-containerReplace inner HTML(58 chars) Attribute#test-imagesrc="https://via.placeholder.com/200"

Searching for HTML change...
Looking for: #test-container and "<h2>HTML Edited!</h2><p>New paragraph content</p>"
Has #test-container: [33mtrue[39m
Has "<h2>HTML Edited!</h2><p>New paragraph content</p>": [33mfalse[39m

  Verifying individual changes:
  ✓ Edit Text: #test-paragraph → "Undo test 3"
  ✓ Hide: #button-1 → display:none
  ✓ Delete/Remove: #button-2
  ✓ Edit HTML: #test-container → HTML change

✅ All expected changes verified in sidebar

🎉 Visual editor complete workflow test PASSED!
✅ Successfully tested:
  • Edit Text - Modified paragraph text
  • Hide - Hid button element
  • Delete - Deleted button element
  • Edit HTML - Modified heading HTML
  • Save to sidebar - Changes synced to DOM editor

🔍 STEP 6.5: Verifying changes and markers after VE exit
  Post-VE state: {
  paragraphText: [32m'Undo test 3'[39m,
  button1Display: [32m'none'[39m,
  button2Display: [32m'none'[39m,
  testContainerHTML: [32m'<h2>HTML Edited!</h2><p>New paragraph content</p><p></p>'[39m,
  markedElementsCount: [33m5[39m,
  elementsWithOriginalsCount: [33m5[39m,
  experimentNames: [
    [32m'e2e_test_experiment_1761076300627'[39m,
    [32m'e2e_test_experiment_1761076300627'[39m,
    [32m'e2e_test_experiment_1761076300627'[39m,
    [32m'e2e_test_experiment_1761076300627'[39m,
    [32m'e2e_test_experiment_1761076300627'[39m
  ]
}
  ✓ All changes still applied after VE exit
  ✓ Preview markers present: 5 elements marked
  ✓ Original values preserved: 5 elements with data-absmartly-original

🚪 STEP 7: Testing Exit Preview button from toolbar
  Verifying preview toolbar is visible...
  📸 Screenshot: after-ve-exit-before-toolbar-check.png
  Toolbar visible: true
  ✓ Preview toolbar is visible
  Preview markers before exit: 5 modified, 5 experiment markers
  Clicking Exit Preview button...
  ✓ Clicked Exit Preview button
  🔍 Checking if sidebar iframe received DISABLE_PREVIEW...
  Sidebar iframe received DISABLE_PREVIEW (main page listener): false
  🔍 Checking if content script received ABSMARTLY_PREVIEW...
  Content script received ABSMARTLY_PREVIEW: false
  📋 Console messages during Exit Preview:
    [TEST] About to click Exit Preview button
    [TEST] Clicking Exit Preview button now...
    [Content Script] Found 5 elements with preview markers
    [TEST] Exit Preview button clicked
    📡 Preview state changed: false
    [ABsmartly] Message listener called! Message type: ABSMARTLY_PREVIEW
    [Visual Editor Content Script] Received message: ABSMARTLY_PREVIEW
    [ABSmartly Content Script] Received preview message: remove
    [ABsmartly Extension] [ABsmartly Page] Removing preview changes for experiment: e2e_test_experiment_1761076300627
    [ABsmartly Extension] [ABsmartly Page] Preview removal requires external preview manager
  Verifying preview toolbar was removed...
  ✓ Preview toolbar removed
  Verifying preview mode is completely disabled...
  After exit state: {
  modifiedElementsCount: [33m0[39m,
  experimentMarkersCount: [33m0[39m,
  paragraphText: [32m'\n'[39m +
    [32m'      This is a test paragraph that we will edit with the visual editor.\n'[39m +
    [32m'    '[39m,
  button1Visible: [33mtrue[39m,
  button2Visible: [33mtrue[39m,
  testContainerHTML: [32m'<h2 id="section-title">Section Title</h2>\n'[39m +
    [32m'      <p id="section-text">Section content that can be modified.</p>'[39m
}
  Remaining markers: 0 modified, 0 experiment markers
  ✓ All preview markers removed
  ✓ All changes reverted to original state
  Verifying preview toggle in sidebar is OFF...
  ✓ Preview toggle in sidebar is OFF
✅ Exit Preview button test COMPLETED!

👁️ STEP 8: Testing preview mode toggle
  Verifying preview is currently disabled...
  ✓ Preview is disabled (no markers present)
  Capturing element states with preview disabled...
  States captured: {
  paragraphText: [32m'\n'[39m +
    [32m'      This is a test paragraph that we will edit with the visual editor.\n'[39m +
    [32m'    '[39m,
  paragraphVisible: [33mtrue[39m,
  button1Visible: [33mtrue[39m,
  button2Visible: [33mtrue[39m,
  testContainerHTML: [32m'<h2 id="section-title">Section Title</h2>\n'[39m +
    [32m'      <p id="section-text">Section content that can be modified.</p>'[39m
}
  Enabling preview mode...
  ✓ Preview mode enabled
  Verifying preview markers were added...
  States after enabling: {
  paragraphText: [32m'\n'[39m +
    [32m'      This is a test paragraph that we will edit with the visual editor.\n'[39m +
    [32m'    '[39m,
  button1Visible: [33mtrue[39m,
  button2Visible: [33mtrue[39m,
  testContainerHTML: [32m'<h2 id="section-title">Section Title</h2>\n'[39m +
    [32m'      <p id="section-text">Section content that can be modified.</p>'[39m,
  stillModifiedCount: [33m0[39m,
  experimentMarkersCount: [33m0[39m
}
  Modified elements: 0
  Experiment markers: 0
  ✘  1 [chromium] › tests/e2e/visual-editor-complete.spec.ts:81:7 › Visual Editor Complete Workflow › Complete workflow: sidebar → experiment → visual editor → actions → save → verify (9.0s)


  1) [chromium] › tests/e2e/visual-editor-complete.spec.ts:81:7 › Visual Editor Complete Workflow › Complete workflow: sidebar → experiment → visual editor → actions → save → verify › Test preview mode toggle 

    Error: [2mexpect([22m[31mreceived[39m[2m).[22mtoBeGreaterThan[2m([22m[32mexpected[39m[2m)[22m

    Expected: > [32m0[39m
    Received:   [31m0[39m

      1184 |
      1185 |       // Verify markers were added
    > 1186 |       expect(enabledStates.stillModifiedCount).toBeGreaterThan(0)
           |                                                ^
      1187 |       expect(enabledStates.experimentMarkersCount).toBeGreaterThan(0)
      1188 |       console.log('  ✓ Preview markers added')
      1189 |
        at /Users/joalves/git_tree/ext-dev6-refactor-sdk-plugin/tests/e2e/visual-editor-complete.spec.ts:1186:48
        at /Users/joalves/git_tree/ext-dev6-refactor-sdk-plugin/tests/e2e/visual-editor-complete.spec.ts:1106:5

  1 failed
    [chromium] › tests/e2e/visual-editor-complete.spec.ts:81:7 › Visual Editor Complete Workflow › Complete workflow: sidebar → experiment → visual editor → actions → save → verify 

To open last HTML report run:
[36m[39m
[36m  npx playwright show-report[39m
[36m[39m
